*executioner.txt*        For Vim version 8.1       Last change: 2018 December 23

            _____                    _   _                                     ~
           |  ___|                  | | (_)                                    ~
           | |____  _____  ___ _   _| |_ _  ___  _ __   ___ _ __               ~
           |  __\ \/ / _ \/ __| | | | __| |/ _ \| '_ \ / _ \ '__|              ~
           | |___>  <  __/ (__| |_| | |_| | (_) | | | |  __/ |                 ~
           \____/_/\_\___|\___|\__,_|\__|_|\___/|_| |_|\___|_|                 ~

                             Reference Manual                                  ~

==============================================================================
CONTENTS                                                  *executioner-contents*

    1. Intro....................................|executioner-intro|
    2. Functionality............................|executioner-functionality|
        2.1 Commands............................|executioner-commands|
        2.2 Variables...........................|executioner-variables|
    3. Mappings.................................|executioner-mappings|
    4. About....................................|executioner-about|

==============================================================================
1. Intro                                                     *executioner-intro*

Executioner is a plugin that allows you to easily execute files in the
terminal or a separate buffer straight from Vim. You can find the most updated
version of the plugin from:

        https://github.com/EvanQuan/vim-executioner

==============================================================================
2. Functionality                                     *executioner-functionality*

TODO

------------------------------------------------------------------------------
2.1 Commands                                              *executioner-commands*

:Executioner [file] [args]                                        *:Executioner*

TODO

:ExecutionerHorizontal [file] [args]                    *:ExecutionerHorizontal*

TODO

:ExecutionerVertical [file] [args]                        *:ExecutionerVertical*

TODO

------------------------------------------------------------------------------
2.2 Variables                                            *executioner-variables*

g:executioner#base_name                                *g:executioner#base_name*

Type: |String|
Default: `'@'`

This character represents the base name of the file to run without its
extension. Whenever this character is present in |g:executioner#extensions| or
|g:executioner#names|, it is replaced with the base name provided by the first
argument of |:Exeuctioner|, |:ExecutionerHorizontal|, or
|:ExecutionerVertical|.

For example, if the file 'test.c' executed as follows: >

        :Executioner test.c
<
and files with the "c" extension are executed as follows: >

        let g:executioner#extensions['c'] = 'gcc % -o @.out;./@.out'
<
Then the following substitution will be made: >

        gcc test.c -o test.out;./test.out
<
g:executioner#full_name                                *g:executioner#full_name*

Type: |String|
Default: `'%'`

This character represents the full name of the file to run with its extension.
Whenever this character is present in |g:executioner#extensions| or
|g:executioner#names|, it is replaced with the full name provided by the first
argument of |:Exeuctioner|, |:ExecutionerHorizontal|, or
|:ExecutionerVertical|.

For example, if the file 'test.py' executed as follows: >

        :Executioner test.py
<
and files with the "py" extension are executed as follows: >

        let g:executioner#extensions['py'] = 'python %'
<
Then the following substitution will be made: >

        python test.py
<
g:executioner#extensions                              *g:executioner#extensions*

Type: |Dictionary|
    Key: |String|
    Value: |String|
    Default: >
            {
              'c'      : 'gcc % -o @.out;./@.out',
              'cpp'    : 'g++ % -o @.out;./@.out',
              'hs'     : 'ghci %',
              'js'     : 'node %',
              'm'      : 'matlab',
              'ml'     : 'ocaml % -o @.out;./@.out',
              'php'    : 'php %',
              'pl'     : 'perl %',
              'prolog' : 'swipl %',
              'py'     : 'python %',
              'py2'    : 'python2 %',
              'R'      : 'Rscript %',
              'r'      : 'Rscript %',
              'rb'     : 'ruby %',
              'rc'     : 'rustc % -o @.out;./@.out',
              'sh'     : 'bash %',
              'swift'  : 'swiftc % -o @.out;./@.out',
            }
<
TODO

g:executioner#names                                        *g:executioner#names*

Type: |Dictionary|
    Key: |String|
    Value: |String|
Default: `{'makefile' : 'make'}`

TODO

g:executioner#load_defaults                        *g:executioner#load_defaults*

Type: |Number|
Default: `1`

TODO

==============================================================================
3. Mappings                                               *executioner-mappings*

TODO

==============================================================================
4. About                                                     *executioner-about*

Executioner is authored by a poor Computer Science student studing at the
University of Calgary, named Evan Quan (https://github.com/EvanQuan/).
Aftering being exposed to a fair number of languages across his degree, Evan
was often frustrated by a lack of unified means to execute his code in Vim.

------------------------------------------------------------------------------
vim:tw=78:ts=8:ft=help:noet:expandtab
